{"version":3,"sources":["data/chatList.ts","data/messageList.ts","components/messageItem/MessageItem.tsx","components/FormAddMessage/FormAddMessage.tsx","components/CurrentDate/CurrentDate.tsx","components/AuthorAvatar/AuthorAvatar.tsx","components/chat/Chat.tsx","components/chatListItem/ChatListItem.tsx","components/chatList/ChatList.tsx","components/FormAuthorization/FormAutorization.tsx","components/FormRegistration/FormRegistration.tsx","components/Intro/Intro.tsx","components/messanger/Messanger.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["chatList","urlImage","name","id","user","date","lastMessageText","today","Date","yearAgo","messageList","users","login","avatarUrl","messages","getTime","author","text","Math","floor","random","regExpDate","MessageItem","message","className","match","FormAddMessage","state","newMessage","handleChange","event","setState","target","value","handleKeyDown","keyCode","shiftKey","preventDefault","props","addMessage","handleSubmit","length","this","onChange","onKeyDown","required","type","onClick","Component","CurrentDate","currentDate","replace","AuthorAvatar","currentAuthor","userAvatar","src","alt","Chat","chatState","chatStateClear","setMessage","findUserAvatar","chatItem","find","map","index","key","toString","ChatListItem","history","push","chat","handlerChat","idActiveChat","handleClick","ChatList","chats","handleChatActive","FormAutorization","password","placeholder","autoComplete","FormRegistration","changeUser","Intro","sort","a","b","Messanger","messagesChat","test","location","pathname","authorOwnProperties","nameChat","handleChangeUser","prevState","now","concat","exact","path","MessangerWithRouter","withRouter","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.78895609.chunk.js","sourcesContent":["import { chatListProps } from '../types';\r\n\r\nexport const chatList: chatListProps[] = [\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg',\r\n    name: 'Архыз',\r\n    id: '0001',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''    \r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg',\r\n    name: 'Челябинская область',\r\n    id: '0002',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg',\r\n    name: 'Иваново',\r\n    id: '0003',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg',\r\n    name: 'Камчатка',\r\n    id: '0004',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg',\r\n    name: 'Холмогорский район',\r\n    id: '0005',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg',\r\n    name: 'Байкал',\r\n    id: '0006',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/khrebet-nurgush.jpg',\r\n    name: 'Нургуш',\r\n    id: '0007',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/tulinovka.jpg',\r\n    name: 'Тулиновка',\r\n    id: '0008',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/zheltukhin-island.jpg',\r\n    name: 'Остров Желтухина',\r\n    id: '0009',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/vladivostok.jpg',\r\n    name: 'Владивосток',\r\n    id: '0010',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://img.freepik.com/free-photo/_198169-183.jpg?size=338&ext=jpg',\r\n    name: 'One message',\r\n    id: '0011',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://img.freepik.com/free-photo/_24972-737.jpg?size=626&ext=jpg',\r\n    name: 'Empty',\r\n    id: '0012',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  }\r\n];","import {messageListProps} from '../types';\r\n\r\n// начальная и конечная даты сообщений\r\nconst today: Date = new Date();\r\nconst yearAgo: Date = new Date(2019, 0, 1);\r\n\r\nexport const messageList: messageListProps = {\r\n  '0001': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0002': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0003': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0004': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0005': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0006': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0007': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0008': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0009': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0010': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0011': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0012': {\r\n    users: [],\r\n    messages: []\r\n  }\r\n};","import React from 'react';\r\nimport './MessageItem.css';\r\nimport { Message } from '../../types';\r\n\r\nconst regExpDate = /\\d{2}:\\d{2}/i;\r\n\r\ntype MessageItemProps = {message: Message}\r\n\r\nexport const MessageItem: React.FC<MessageItemProps> = ( {message} ) => {\r\n  return (\r\n    <div className=\"messageItem\">\r\n      <div className=\"messageItem__text-wrapper\">\r\n        <span className=\"messageItem__author\">{message.author}</span>\r\n        <p className=\"messageItem__text\">{message.text}</p>\r\n      </div>\r\n      <p className=\"messageItem__date\" >{`${new Date(message.date)}`.match(regExpDate)}</p>\r\n    </div>\r\n  );\r\n};","import React, { Component, ChangeEvent, FormEvent } from 'react';\r\nimport './FormAddMessage.css';\r\n\r\ntype FormAddMessageProps = {\r\n  addMessage: (value: string) => void\r\n}\r\n\r\nexport class FormAddMessage extends Component<FormAddMessageProps> {\r\n\r\n  state: {newMessage: string} = {\r\n    newMessage: ''\r\n  }\r\n\r\n  handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    this.setState({newMessage: event.target.value});\r\n  }\r\n\r\n  handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.keyCode === 13 && !event.shiftKey) {\r\n      event.preventDefault();\r\n      this.props.addMessage(this.state.newMessage);\r\n      this.setState({newMessage: ''});\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event: FormEvent<HTMLButtonElement>) => {\r\n    if (this.state.newMessage.length !== 0) {\r\n      event.preventDefault();\r\n      this.props.addMessage(this.state.newMessage);\r\n      this.setState({newMessage: ''});\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return(\r\n      <form className=\"formAddMessage\">\r\n        <textarea \r\n          value={this.state.newMessage} \r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          className=\"formAddMessage__input\"\r\n          required />\r\n        <button type=\"submit\" onClick={this.handleSubmit} className=\"formAddMessage__button\">Add<br />message</button>\r\n      </form>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nconst regExpDate = /.*([A-Z][a-z]{2})\\s(\\d{2})\\s(\\d{4}).*/;\r\n\r\ntype CurrentDateProps = {\r\n  date: number,\r\n  currentDate: number\r\n}\r\n\r\nexport const CurrentDate: React.FC<CurrentDateProps> = ({ date, currentDate }) => (date === currentDate ? null :\r\n  <p className=\"chat-screen__date\">{`${new Date(date)}`.replace(regExpDate, '$2 $1 $3')}</p>);","import React from 'react';\r\nimport { Message } from '../../types';\r\n\r\ntype AuthorAvatarProps = {\r\n  message: Message\r\n  currentAuthor: string,\r\n  userAvatar: string | undefined\r\n}\r\n  \r\nexport const AuthorAvatar: React.FC<AuthorAvatarProps> = ({ message, currentAuthor, userAvatar }) => \r\n  (message.author === currentAuthor ? null : <img src={userAvatar} alt=\"\" className=\"message__author-image\"/>)","import React, { Component } from 'react';\r\nimport './Chat.css';\r\nimport { ChatProps, chatStateProps } from '../../types';\r\nimport { MessageItem } from '../messageItem/MessageItem';\r\nimport { FormAddMessage } from '../FormAddMessage/FormAddMessage';\r\nimport { CurrentDate } from '../CurrentDate/CurrentDate';\r\nimport { AuthorAvatar } from '../AuthorAvatar/AuthorAvatar';\r\n\r\n\r\nexport class Chat extends Component<ChatProps> {\r\n\r\n  chatState: chatStateProps = {\r\n    currentDate: 0,\r\n    author: ''\r\n  }\r\n\r\n  chatStateClear = () => this.chatState;\r\n\r\n  setMessage = (author: string, currentDate: number) => {\r\n    this.chatState = { author, currentDate };\r\n  }\r\n\r\n  findUserAvatar = (name: string) => this.props.chatItem.users.find(user => user.login === name)?.avatarUrl;\r\n\r\n  render() {\r\n    const { chatItem, addMessage } = this.props;\r\n    const { messages } = chatItem;\r\n    return (\r\n      <div className=\"chat-screen\">\r\n        <div>\r\n          {messages?.map((message, index: number) => {\r\n            return (\r\n              <div key = {index.toString()}>\r\n                <CurrentDate date = {message.date} currentDate = { this.chatState.currentDate } />\r\n                {(this.chatState.currentDate = message.date) && null}\r\n                <div className=\"message__wrapper\">\r\n                  <AuthorAvatar \r\n                    message = { message } \r\n                    currentAuthor = { this.chatState.author } \r\n                    userAvatar = { this.findUserAvatar(message.author) } />\r\n                  {(this.chatState.author = message.author) && null}\r\n                  <MessageItem message = { message } />\r\n                </div>  \r\n              </div>\r\n          )})}\r\n          {this.setMessage('', 0)}\r\n        </div>\r\n        {(messages.length !== 0) && <FormAddMessage addMessage = { addMessage } />}    \r\n      </div>\r\n    );\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { chatListProps } from \"../../types\";\r\nimport \"./ChatListItem.css\";\r\n\r\nconst regExpDate = /[a-z]{3}\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}/i;\r\n\r\ntype ChatListItemProps = {\r\n  chat: chatListProps;\r\n  handlerChat: (nameChat: string) => void;\r\n  idActiveChat: string;\r\n};\r\n\r\ntype ChatListProps = {\r\n  chats: chatListProps[];\r\n};\r\n\r\nexport class ChatListItem extends Component<\r\n  ChatListItemProps & ChatListProps & RouteComponentProps\r\n> {\r\n  handleClick(id: string) {\r\n    this.props.history.push(`/messenger-chat/chat/${this.props.chat.id}`);\r\n    this.props.handlerChat(id);\r\n  }\r\n\r\n  render() {\r\n    const { chat, idActiveChat } = this.props;\r\n    return (\r\n      <div\r\n        onClick={() => this.handleClick(chat.id)}\r\n        className={\r\n          idActiveChat === chat.id\r\n            ? \"chatListItem chatListItem_active\"\r\n            : \"chatListItem\"\r\n        }\r\n      >\r\n        <div className=\"chatListItem__image-wrapper\">\r\n          <img\r\n            src={chat.urlImage}\r\n            alt={chat.name}\r\n            className=\"chatListItem__image\"\r\n          />\r\n        </div>\r\n        <div className=\"chatListItem__content-wrapper\">\r\n          <div className=\"chatListItem__content-header\">\r\n            <span className=\"chatListItem__name\">{chat.name}</span>\r\n            <time className=\"chatListItem__date\">\r\n              {`${new Date(chat.date)}`.match(regExpDate)}\r\n            </time>\r\n          </div>\r\n          <div className=\"chatListItem__content\">\r\n            <span className=\"chatListItem__author\">{chat.user}:</span>\r\n            <p className=\"chatListItem__text\">{chat.lastMessageText}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './ChatList.css';\r\nimport { ChatListItem } from '../chatListItem/ChatListItem';\r\nimport { chatListProps } from '../../types';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ntype ChatListProps = {\r\n  chats: chatListProps[],\r\n  idActiveChat: string,\r\n  handleChatActive: (nameChat:string) => void,\r\n}\r\n\r\nexport const ChatList: React.FC<ChatListProps & RouteComponentProps> = ( props ) => {\r\n  return (\r\n    <div className=\"chatList\">\r\n      {props.chats.map(chat => <ChatListItem {...props} \r\n        chat={chat} \r\n        key={chat.id} \r\n        handlerChat = {props.handleChatActive} \r\n        idActiveChat={props.idActiveChat} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { ChangeEvent, Component, FormEvent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport \"./FormAutorization.css\";\r\n\r\ntype stateType = { login: string; password: string };\r\n\r\nexport class FormAutorization extends Component<RouteComponentProps> {\r\n  state: stateType = {\r\n    login: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.name === \"login\") {\r\n      this.setState({ login: event.target.value });\r\n    }\r\n    if (event.target.name === \"password\") {\r\n      this.setState({ password: event.target.value });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event: FormEvent<HTMLButtonElement>) => {\r\n    if (this.state.login.length !== 0 && this.state.password.length !== 0) {\r\n      event.preventDefault();\r\n      this.props.history.push(\"/messenger-chat/chat/\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { login, password } = this.state;\r\n    return (\r\n      <form className=\"FormAutorization\">\r\n        <input\r\n          name=\"login\"\r\n          value={login}\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          placeholder=\"логин\"\r\n          autoComplete=\"off\"\r\n          className=\"FormAutorization__input-login\"\r\n          required\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.handleChange}\r\n          type=\"password\"\r\n          placeholder=\"пароль\"\r\n          autoComplete=\"off\"\r\n          className=\"FormAutorization__input-password\"\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          onClick={this.handleSubmit}\r\n          className=\"FormAutorization__button\"\r\n        >\r\n          Войти\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { ChangeEvent, Component, FormEvent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport \"./FormRegistration.css\";\r\n\r\ntype stateType = { login: string; password: string };\r\n\r\ntype FormAutorizationProps = {\r\n  changeUser: (name: string) => void;\r\n};\r\n\r\nexport class FormRegistration extends Component<\r\n  FormAutorizationProps & RouteComponentProps\r\n> {\r\n  state: stateType = {\r\n    login: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.name === \"login\") {\r\n      this.setState({ login: event.target.value });\r\n    }\r\n    if (event.target.name === \"password\") {\r\n      this.setState({ password: event.target.value });\r\n    }\r\n  };\r\n\r\n  handleSubmit = (event: FormEvent<HTMLButtonElement>) => {\r\n    if (this.state.login.length !== 0 && this.state.password.length !== 0) {\r\n      event.preventDefault();\r\n      this.props.history.push(\"/messenger-chat/chat/\");\r\n      this.props.changeUser(this.state.login);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { login, password } = this.state;\r\n    return (\r\n      <form className=\"FormAutorization\">\r\n        <input\r\n          name=\"login\"\r\n          value={login}\r\n          onChange={this.handleChange}\r\n          type=\"text\"\r\n          placeholder=\"логин\"\r\n          autoComplete=\"off\"\r\n          className=\"FormAutorization__input-login\"\r\n          required\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.handleChange}\r\n          type=\"password\"\r\n          placeholder=\"пароль\"\r\n          autoComplete=\"off\"\r\n          className=\"FormAutorization__input-password\"\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          onClick={this.handleSubmit}\r\n          className=\"FormAutorization__button\"\r\n        >\r\n          Войти\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { FormEvent } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport \"./Intro.css\";\r\n\r\nexport const Intro: React.FC<RouteComponentProps> = ({ history }) => {\r\n  // TODO: дублирование кода, подумать над типом, с помощью которого можно будет извлечь className из eventTarget.\r\n  const handleSubmitReg = (event: FormEvent<HTMLButtonElement>) => {\r\n    history.push(\"/messenger-chat/reg\");\r\n  };\r\n\r\n  // TODO: дублирование кода, подумать над типом, с помощью которого можно будет извлечь className из eventTarget.\r\n  const handleSubmitAuth = (event: FormEvent<HTMLButtonElement>) => {\r\n    history.push(\"/messenger-chat/auth\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Intro\">\r\n      <h1 className=\"Intro__header\">Войдите или зарегистрируйтесь</h1>\r\n      <button\r\n        onClick={handleSubmitReg}\r\n        className=\"Intro__button Intro__button_registration\"\r\n      >\r\n        Регистрация\r\n      </button>\r\n      <button\r\n        onClick={handleSubmitAuth}\r\n        className=\"Intro__button Intro__button_authorization\"\r\n      >\r\n        Вход\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Route, RouteComponentProps } from \"react-router-dom\";\r\nimport { chatList } from \"../../data/chatList\";\r\nimport { messageList } from \"../../data/messageList\";\r\nimport { Message, User } from \"../../types\";\r\nimport { Chat } from \"../chat/Chat\";\r\nimport { ChatList } from \"../chatList/ChatList\";\r\nimport { FormAutorization } from \"../FormAuthorization/FormAutorization\";\r\nimport { FormRegistration } from \"../FormRegistration/FormRegistration\";\r\nimport { Intro } from \"../Intro/Intro\";\r\nimport \"./Messanger.css\";\r\n\r\n// сортировка начальных данных\r\n// сортировка сообщений\r\nfor (let chat in messageList) {\r\n  messageList[chat]?.messages.sort((a: Message, b: Message) => b.date - a.date);\r\n}\r\n\r\n// сохраняем дату и текст последнего сообщения в специальных полях чата\r\nfor (let chat of chatList) {\r\n  chat.date = messageList[chat.id]?.messages[0]?.date;\r\n  chat.lastMessageText = messageList[chat.id]?.messages[0]?.text;\r\n}\r\n\r\n// сортировка списка чатов, чтобы сверху списка отображался последний используемый чат\r\nchatList.sort((a, b) => b.date - a.date);\r\n\r\ntype stateType = {\r\n  messagesChat: { users: User[]; messages: Message[] };\r\n  idActiveChat: string;\r\n  authorOwnProperties: { login: string; avatarUrl: string };\r\n};\r\n\r\nexport class Messanger extends Component<RouteComponentProps> {\r\n  // инициализируем state исходя из history.pathname - если в адресе есть id чата, то в messagesChat добавляем сообщения\r\n  // из чата, индекс которого равен id чата из адреса, иначе пустой массив\r\n  state: stateType = {\r\n    messagesChat: /\\d{4}/.test(this.props.location.pathname)\r\n      ? messageList[this.props.location.pathname.replace(/.*(\\d{4}).*/, \"$1\")]\r\n      : { users: [], messages: [] },\r\n    idActiveChat: \"\",\r\n    authorOwnProperties: {\r\n      login: \"\",\r\n      avatarUrl:\r\n        \"https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg\"\r\n    }\r\n  };\r\n\r\n  // выбираем чат - по клику на чат изменяем список отображемых чатов\r\n  handleChatActive = (nameChat: string): void => {\r\n    this.setState({\r\n      idActiveChat: nameChat,\r\n      messagesChat: {\r\n        users: messageList[nameChat].users,\r\n        messages: messageList[nameChat].messages\r\n      }\r\n    });\r\n  };\r\n\r\n  handleChangeUser = (name: string) => {\r\n    this.setState((prevState: stateType) => ({\r\n      authorOwnProperties: {\r\n        login: name,\r\n        avatarUrl: prevState.authorOwnProperties.avatarUrl\r\n      }\r\n    }));\r\n  };\r\n\r\n  // добавление сообщений - после отправки сообщения добавляем сообщение в список сообщений\r\n  addMessage = (message: string) => {\r\n    const now = new Date();\r\n    this.setState((prevState: stateType) => ({\r\n      messagesChat: {\r\n        users: prevState.messagesChat.users.concat(\r\n          this.state.authorOwnProperties\r\n        ),\r\n        messages: prevState.messagesChat.messages.concat({\r\n          date: now.getTime(),\r\n          author: this.state.authorOwnProperties.login,\r\n          text: message\r\n        })\r\n      }\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"messanger\">\r\n        <header className=\"header\">\r\n          <h1 className=\"header__title\">messenger-chat</h1>\r\n          <h2 className=\"header__subtitle\">\r\n            {this.state.authorOwnProperties.login}\r\n          </h2>\r\n        </header>\r\n        <main className=\"main\">\r\n          <Route exact path=\"/messenger-chat/\">\r\n            <Intro {...this.props} />\r\n          </Route>\r\n          <Route path=\"/messenger-chat/reg\">\r\n            <FormRegistration\r\n              {...this.props}\r\n              changeUser={this.handleChangeUser}\r\n            />\r\n          </Route>\r\n          <Route path=\"/messenger-chat/auth\">\r\n            <FormAutorization {...this.props} />\r\n          </Route>\r\n          <Route path=\"/messenger-chat/chat\">\r\n            <ChatList\r\n              {...this.props}\r\n              chats={chatList}\r\n              idActiveChat={this.state.idActiveChat}\r\n              handleChatActive={this.handleChatActive}\r\n            />\r\n            <Route path={this.props.location.pathname}>\r\n              <Chat\r\n                chatItem={this.state.messagesChat}\r\n                addMessage={this.addMessage}\r\n              />\r\n            </Route>\r\n          </Route>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Messanger } from '../messanger/Messanger';\r\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom';\r\n\r\nconst MessangerWithRouter = withRouter(Messanger);\r\n\r\nexport const App: React.FC = () => (<Router><MessangerWithRouter /></Router>);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}