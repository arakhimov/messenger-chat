{"version":3,"sources":["data/chatList.ts","data/messageList.ts","components/chatListItem/ChatListItem.tsx","components/chatList/ChatList.tsx","components/messageItem/MessageItem.tsx","components/FormAddMessage/FormAddMessage.tsx","components/chat/Chat.tsx","components/FormAuthorization/FormAutorization.tsx","components/FormRegistration/FormRegistration.tsx","components/Intro/Intro.tsx","components/messanger/Messanger.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["chatList","urlImage","name","id","user","date","lastMessageText","today","Date","yearAgo","messageList","users","login","avatarUrl","messages","getTime","author","text","Math","floor","random","regExpDate","ChatListItem","this","props","history","push","chat","handlerChat","idActiveChat","onClick","handleClick","className","src","alt","match","Component","ChatList","chats","map","key","handleChatActive","MessageItem","message","FormAddMessage","state","newMessage","handleChange","event","setState","target","value","handleKeyDown","keyCode","shiftKey","preventDefault","addMessage","handleSubmit","length","onChange","onKeyDown","required","type","CurrentDate","currentDate","replace","AuthorAvatar","currentAuthor","find","Chat","chatState","setMessage","chatItem","index","toString","FormAutorization","password","placeholder","autoComplete","FormRegistration","changeUser","Intro","console","log","sort","a","b","Messanger","messagesChat","test","location","pathname","authorOwnProperties","nameChat","handleChangeUser","prevState","now","concat","exact","path","MessangerWithRouter","withRouter","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3db8f01b.chunk.js","sourcesContent":["import { chatListProps } from '../types';\r\n\r\nexport const chatList: chatListProps[] = [\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg',\r\n    name: 'Архыз',\r\n    id: '0001',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''    \r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg',\r\n    name: 'Челябинская область',\r\n    id: '0002',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg',\r\n    name: 'Иваново',\r\n    id: '0003',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg',\r\n    name: 'Камчатка',\r\n    id: '0004',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg',\r\n    name: 'Холмогорский район',\r\n    id: '0005',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg',\r\n    name: 'Байкал',\r\n    id: '0006',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/khrebet-nurgush.jpg',\r\n    name: 'Нургуш',\r\n    id: '0007',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/tulinovka.jpg',\r\n    name: 'Тулиновка',\r\n    id: '0008',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/zheltukhin-island.jpg',\r\n    name: 'Остров Желтухина',\r\n    id: '0009',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/vladivostok.jpg',\r\n    name: 'Владивосток',\r\n    id: '0010',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://img.freepik.com/free-photo/_198169-183.jpg?size=338&ext=jpg',\r\n    name: 'One message',\r\n    id: '0011',\r\n    user: 'piligrim',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  },\r\n  {\r\n    urlImage: 'https://img.freepik.com/free-photo/_24972-737.jpg?size=626&ext=jpg',\r\n    name: 'Empty',\r\n    id: '0012',\r\n    user: 'ryoka',\r\n    date: 0,\r\n    lastMessageText: ''\r\n  }\r\n];","import {messageListProps} from '../types';\r\n\r\n// начальная и конечная даты сообщений\r\nconst today: Date = new Date();\r\nconst yearAgo: Date = new Date(2019, 0, 1);\r\n\r\nexport const messageList: messageListProps = {\r\n  '0001': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0002': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0003': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0004': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0005': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0006': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0007': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0008': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0009': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0010': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime(),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'ryoka',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      },\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0011': {\r\n    users: [\r\n      {\r\n        login: 'piligrim',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/_23-2147868989.jpg?size=626&ext=jpg'\r\n      },\r\n      {\r\n        login: 'ryoka',\r\n        avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n      }\r\n    ],\r\n    messages: [\r\n      {\r\n        date: today.getTime() + Math.floor(Math.random() * (yearAgo.getTime() - today.getTime())),\r\n        author: 'piligrim',\r\n        text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua',\r\n      }\r\n    ]\r\n  },\r\n  '0012': {\r\n    users: [],\r\n    messages: []\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport './ChatListItem.css';\r\nimport { chatListProps } from '../../types';\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nconst regExpDate = /[a-z]{3}\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}/i;\r\n\r\ntype ChatListItemProps = {\r\n  chat : chatListProps,\r\n  handlerChat: (nameChat: string) => void,\r\n  idActiveChat: string\r\n}\r\n\r\ntype ChatListProps = {\r\n  chats: chatListProps[],\r\n}\r\n\r\nexport class ChatListItem extends Component<ChatListItemProps & ChatListProps & RouteComponentProps> {\r\n\r\n  handleClick(id: string) {\r\n    this.props.history.push(`/middle.react.praktikum.yandex/chat/${this.props.chat.id}`);\r\n    this.props.handlerChat(id);\r\n  }\r\n\r\n  render() {\r\n    const {chat, idActiveChat} = this.props;\r\n    return (\r\n      <div onClick = {() => this.handleClick(chat.id)}  \r\n        className={idActiveChat === chat.id ? \"chatListItem chatListItem_active\" : \"chatListItem\"}>\r\n        <div className=\"chatListItem__image-wrapper\">\r\n          <img src={chat.urlImage} alt={chat.name} className=\"chatListItem__image\"/>\r\n        </div>\r\n        <div className=\"chatListItem__content-wrapper\">\r\n          <div className=\"chatListItem__content-header\">\r\n            <span className=\"chatListItem__name\">{chat.name}</span>\r\n            <time className=\"chatListItem__date\">{`${new Date(chat.date)}`.match(regExpDate)}</time>\r\n          </div>\r\n          <div className=\"chatListItem__content\">\r\n            <span className=\"chatListItem__author\">{chat.user}:</span>\r\n            <p className=\"chatListItem__text\">{chat.lastMessageText}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './ChatList.css';\r\nimport { ChatListItem } from '../chatListItem/ChatListItem';\r\nimport { chatListProps } from '../../types';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ntype ChatListProps = {\r\n  chats: chatListProps[],\r\n  idActiveChat: string,\r\n  handleChatActive: (nameChat:string) => void,\r\n}\r\n\r\nexport const ChatList: React.FC<ChatListProps & RouteComponentProps> = ( props ) => {\r\n  return (\r\n    <div className=\"chatList\">\r\n      {props.chats.map(chat => <ChatListItem {...props} \r\n        chat={chat} \r\n        key={chat.id} \r\n        handlerChat = {props.handleChatActive} \r\n        idActiveChat={props.idActiveChat} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport './MessageItem.css';\r\nimport { Message } from '../../types';\r\n\r\nconst regExpDate = /\\d{2}:\\d{2}/i;\r\n\r\ntype MessageItemProps = {message: Message}\r\n\r\nexport const MessageItem: React.FC<MessageItemProps> = ( {message} ) => {\r\n  return (\r\n    <div className=\"messageItem\">\r\n      <div className=\"messageItem__text-wrapper\">\r\n        <span className=\"messageItem__author\">{message.author}</span>\r\n        <p className=\"messageItem__text\">{message.text}</p>\r\n      </div>\r\n      <p className=\"messageItem__date\" >{`${new Date(message.date)}`.match(regExpDate)}</p>\r\n    </div>\r\n  );\r\n};","import React, { Component, ChangeEvent, FormEvent } from 'react';\r\nimport './FormAddMessage.css';\r\n\r\ntype FormAddMessageProps = {\r\n  addMessage: (value: string) => void\r\n}\r\n\r\nexport class FormAddMessage extends Component<FormAddMessageProps> {\r\n\r\n  state: {newMessage: string} = {\r\n    newMessage: ''\r\n  }\r\n\r\n  handleChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n    this.setState({newMessage: event.target.value});\r\n  }\r\n\r\n  handleKeyDown = (event: React.KeyboardEvent) => {\r\n    if (event.keyCode === 13 && !event.shiftKey) {\r\n      event.preventDefault();\r\n      this.props.addMessage(this.state.newMessage);\r\n      this.setState({newMessage: ''});\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event: FormEvent<HTMLButtonElement>) => {\r\n    if (this.state.newMessage.length !== 0) {\r\n      event.preventDefault();\r\n      this.props.addMessage(this.state.newMessage);\r\n      this.setState({newMessage: ''});\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n    return(\r\n      <form className=\"formAddMessage\">\r\n        <textarea \r\n          value={this.state.newMessage} \r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          className=\"formAddMessage__input\"\r\n          required />\r\n        <button type=\"submit\" onClick={this.handleSubmit} className=\"formAddMessage__button\">Add<br />message</button>\r\n      </form>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Chat.css';\r\nimport { Message, User } from '../../types';\r\nimport { MessageItem } from '../messageItem/MessageItem';\r\nimport { FormAddMessage } from '../FormAddMessage/FormAddMessage';\r\n\r\nconst regExpDate = /.*([A-Z][a-z]{2})\\s(\\d{2})\\s(\\d{4}).*/;\r\n\r\ntype CurrentDateProps = {\r\n  date: number,\r\n  currentDate: number\r\n}\r\n\r\nconst CurrentDate: React.FC<CurrentDateProps> = ({date, currentDate}) => (date === currentDate ? null :\r\n  <p className=\"chat-screen__date\">{`${new Date(date)}`.replace(regExpDate, '$2 $1 $3')}</p>);\r\n\r\ntype AuthorAvatarProps = {\r\n  message: Message\r\n  currentAuthor: string,\r\n  users: User[],\r\n}\r\n  \r\nconst AuthorAvatar: React.FC<AuthorAvatarProps> = ({message, currentAuthor, users}) => \r\n  (message.author === currentAuthor ? null : <img src={users?.find(user => user.login === message.author)?.avatarUrl} \r\n    alt=\"\" className=\"message__author-image\"/>)\r\n\r\nexport type ChatProps = {\r\n  chatItem: { users: User[], messages: Message[] },\r\n  addMessage: (value: string) => void\r\n}\r\n\r\n\r\ntype chatStateProps = {\r\n  currentDate: number,\r\n  author: string\r\n}\r\n\r\nexport class Chat extends Component<ChatProps> {\r\n\r\n  chatState: chatStateProps = {\r\n    currentDate: 0,\r\n    author: ''\r\n  }\r\n\r\n  setMessage = (author: string, currentDate: number) => {\r\n    this.chatState = {author, currentDate};\r\n  }\r\n\r\n  render() {\r\n    const {chatItem, addMessage} = this.props;\r\n    const {messages, users} = chatItem;\r\n    return (\r\n      <div className=\"chat-screen\">\r\n        <div>\r\n          {messages?.map((message, index: number) => {\r\n            return (\r\n              <div key = {index.toString()}>\r\n                <CurrentDate date = {message.date} currentDate = {this.chatState.currentDate} />\r\n                {(this.chatState.currentDate = message.date) && null}\r\n                <div className=\"message__wrapper\">\r\n                  <AuthorAvatar message = {message} currentAuthor = {this.chatState.author} users = {users} />\r\n                  {(this.chatState.author = message.author) && null}\r\n                  <MessageItem message = {message} />\r\n                </div>  \r\n              </div>\r\n          )})}\r\n          {this.setMessage('', 0)}\r\n        </div>\r\n        {(messages.length !== 0) && <FormAddMessage addMessage = {addMessage} />}    \r\n      </div>\r\n    );\r\n  }\r\n};","import React, { Component, ChangeEvent, FormEvent } from 'react';\r\nimport './FormAutorization.css';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ntype stateType = {login: string, password: string};\r\n\r\nexport class FormAutorization extends Component<RouteComponentProps> {\r\n\r\n  state: stateType = {\r\n    login: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.name === 'login') {\r\n      this.setState({login: event.target.value});\r\n    }\r\n    if (event.target.name === 'password') {\r\n      this.setState({password: event.target.value});\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event: FormEvent<HTMLButtonElement>) => {\r\n    if (this.state.login.length !== 0 && this.state.password.length !== 0) {\r\n      event.preventDefault();\r\n      this.props.history.push('/middle.react.praktikum.yandex/chat/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {login, password} = this.state;\r\n    return (\r\n      <form className=\"FormAutorization\">\r\n        <input name=\"login\" value = {login} onChange = {this.handleChange} type=\"text\" placeholder=\"логин\" autoComplete=\"off\" className=\"FormAutorization__input-login\" required />\r\n        <input name=\"password\" value = {password} onChange = {this.handleChange} type=\"password\" placeholder=\"пароль\" autoComplete=\"off\" className=\"FormAutorization__input-password\" required />\r\n        <button type=\"submit\" onClick = {this.handleSubmit} className=\"FormAutorization__button\">Войти</button>\r\n      </form>\r\n    )\r\n  }\r\n}","import React, { Component, ChangeEvent, FormEvent } from 'react';\r\nimport './FormRegistration.css';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\ntype stateType = {login: string, password: string};\r\n\r\ntype FormAutorizationProps = {\r\n  changeUser: (name: string) => void\r\n};\r\n\r\nexport class FormRegistration extends Component<FormAutorizationProps & RouteComponentProps> {\r\n\r\n  state: stateType = {\r\n    login: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.name === 'login') {\r\n      this.setState({login: event.target.value});\r\n    }\r\n    if (event.target.name === 'password') {\r\n      this.setState({password: event.target.value});\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event: FormEvent<HTMLButtonElement>) => {\r\n    if (this.state.login.length !== 0 && this.state.password.length !== 0) {\r\n      event.preventDefault();\r\n      this.props.history.push('/middle.react.praktikum.yandex/chat/');\r\n      this.props.changeUser(this.state.login);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {login, password} = this.state;\r\n    return (\r\n      <form className=\"FormAutorization\">\r\n        <input name=\"login\" value = {login} onChange = {this.handleChange} type=\"text\" placeholder=\"логин\" autoComplete=\"off\" className=\"FormAutorization__input-login\" required />\r\n        <input name=\"password\" value = {password} onChange = {this.handleChange} type=\"password\" placeholder=\"пароль\" autoComplete=\"off\" className=\"FormAutorization__input-password\" required />\r\n        <button type=\"submit\" onClick = {this.handleSubmit} className=\"FormAutorization__button\">Войти</button>\r\n      </form>\r\n    )\r\n  }\r\n}","import React, { FormEvent } from 'react';\r\nimport './Intro.css';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nexport const Intro: React.FC<RouteComponentProps> = ( {history} ) => {\r\n  \r\n  // TODO: дублирование кода, подумать над типом, с помощью которого можно будет извлечь className из eventTarget.\r\n  const handleSubmitReg = (event: FormEvent<HTMLButtonElement>) => {\r\n    history.push('/middle.react.praktikum.yandex/reg');\r\n    console.log(event.target);\r\n  }\r\n\r\n  // TODO: дублирование кода, подумать над типом, с помощью которого можно будет извлечь className из eventTarget.\r\n  const handleSubmitAuth = (event: FormEvent<HTMLButtonElement>) => {\r\n    history.push('/middle.react.praktikum.yandex/auth');\r\n    console.log(event.target);\r\n  }\r\n\r\n  return (\r\n  <div className=\"Intro\">\r\n    <h1 className=\"Intro__header\">Войдите или зарегистрируйтесь</h1>\r\n    <button onClick = { handleSubmitReg } className=\"Intro__button Intro__button_registration\">Регистрация</button>\r\n    <button onClick = { handleSubmitAuth } className=\"Intro__button Intro__button_authorization\">Вход</button>\r\n  </div>)\r\n}","import React, { Component } from 'react';\r\nimport './Messanger.css';\r\nimport { chatList } from '../../data/chatList';\r\nimport { messageList } from '../../data/messageList';\r\nimport { ChatList } from '../chatList/ChatList';\r\nimport { Chat } from '../chat/Chat';\r\nimport { FormAutorization } from '../FormAuthorization/FormAutorization';\r\nimport { FormRegistration } from '../FormRegistration/FormRegistration';\r\nimport { Intro } from '../Intro/Intro';\r\nimport { Route, RouteComponentProps } from 'react-router-dom';\r\nimport { User, Message } from '../../types'; \r\n\r\n// сортировка начальных данных\r\n// сортировка сообщений\r\nfor (let chat in messageList) {\r\n  messageList[chat]?.messages.sort((a: Message, b: Message) => b.date - a.date);\r\n}\r\n\r\n// сохраняем дату и текст последнего сообщения в специальных полях чата\r\nfor (let chat of chatList) {\r\n  chat.date = messageList[chat.id]?.messages[0]?.date;\r\n  chat.lastMessageText = messageList[chat.id]?.messages[0]?.text;\r\n}\r\n\r\n// сортировка списка чатов, чтобы сверху списка отображался последний используемый чат\r\nchatList.sort((a, b) => b.date - a.date);\r\n\r\ntype stateType = {\r\n  messagesChat: { users: User[], messages: Message[] },\r\n  idActiveChat: string,\r\n  authorOwnProperties: { login: string, avatarUrl: string }\r\n}\r\n\r\nexport class Messanger extends Component<RouteComponentProps> {\r\n\r\n  // инициализируем state исходя из history.pathname - если в адресе есть id чата, то в messagesChat добавляем сообщения\r\n  // из чата, индекс которого равен id чата из адреса, иначе пустой массив\r\n  state: stateType = {\r\n    messagesChat: /\\d{4}/.test(this.props.location.pathname) ? messageList[this.props.location.pathname.replace(/.*(\\d{4}).*/, '$1')] :  { users: [], messages: [] },\r\n    idActiveChat: '',\r\n    authorOwnProperties: {\r\n      login: '',\r\n      avatarUrl: 'https://img.freepik.com/free-photo/3d_1048-6284.jpg?size=338&ext=jpg'\r\n    }\r\n  };\r\n\r\n  // выбираем чат - по клику на чат изменяем список отображемых чатов\r\n  handleChatActive = (nameChat: string): void => {\r\n    this.setState(({\r\n      idActiveChat: nameChat,\r\n      messagesChat: {\r\n        users: messageList[nameChat].users,\r\n        messages: messageList[nameChat].messages\r\n      }\r\n    }));\r\n  }\r\n\r\n  handleChangeUser = (name : string) => {\r\n    console.log(name);\r\n    this.setState((prevState: stateType) => ({\r\n      authorOwnProperties: {\r\n        login: name,\r\n        avatarUrl: prevState.authorOwnProperties.avatarUrl\r\n      }\r\n    }));\r\n  }\r\n\r\n  // добавление сообщений - после отправки сообщения добавляем сообщение в список сообщений \r\n  addMessage = (message: string) => { \r\n    const now = new Date();\r\n    this.setState((prevState: stateType) => ({\r\n      messagesChat : {\r\n        users: prevState.messagesChat.users.concat(this.state.authorOwnProperties),\r\n        messages: prevState.messagesChat.messages.concat({\r\n          date: now.getTime(), \r\n          author: this.state.authorOwnProperties.login, \r\n          text: message\r\n        })\r\n      }\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"messanger\">\r\n        <header className=\"header\">\r\n          <h1 className=\"header__title\">messenger-chat</h1>\r\n          <h2 className=\"header__subtitle\">{ this.state.authorOwnProperties.login }</h2>\r\n        </header>\r\n        <main className=\"main\">\r\n          <Route exact path='/middle.react.praktikum.yandex/'><Intro {...this.props} /></Route>\r\n          <Route path='/middle.react.praktikum.yandex/reg'><FormRegistration {...this.props} changeUser = {this.handleChangeUser} /></Route>\r\n          <Route path='/middle.react.praktikum.yandex/auth'><FormAutorization {...this.props} /></Route>\r\n          <Route path='/middle.react.praktikum.yandex/chat'>\r\n            <ChatList {...this.props} chats = {chatList} idActiveChat = {this.state.idActiveChat} handleChatActive = {this.handleChatActive} />\r\n            <Route path = {this.props.location.pathname}><Chat chatItem = {this.state.messagesChat} addMessage = {this.addMessage} /></Route>\r\n          </Route>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Messanger } from '../messanger/Messanger';\r\nimport { BrowserRouter as Router, withRouter } from 'react-router-dom';\r\n\r\nconst MessangerWithRouter = withRouter(Messanger);\r\n\r\nexport const App: React.FC = () => (<Router><MessangerWithRouter /></Router>);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}